// <auto-generated />
using DesafioTjRjErlimar.DatabaseAdapter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioTjRjErlimar.DatabaseAdapter.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DesafioTjRjErlimar.Application.Model.Assunto", b =>
                {
                    b.Property<int>("AssuntoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodAssunto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssuntoId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Descricao");

                    b.HasKey("AssuntoId");

                    b.ToTable("Assunto", (string)null);
                });

            modelBuilder.Entity("DesafioTjRjErlimar.Application.Model.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodAutor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Nome");

                    b.HasKey("AutorId");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("DesafioTjRjErlimar.Application.Model.Livro", b =>
                {
                    b.Property<int>("LivroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodLivro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LivroId"));

                    b.Property<int>("AnoPublicacao")
                        .HasColumnType("int")
                        .HasColumnName("AnoPublicacao");

                    b.Property<int>("Edicao")
                        .HasColumnType("int")
                        .HasColumnName("Edicao");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Editora");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Titulo");

                    b.HasKey("LivroId");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("Livro_Assunto", b =>
                {
                    b.Property<int>("Assunto_CodAssunto")
                        .HasColumnType("int");

                    b.Property<int>("Livro_CodLivro")
                        .HasColumnType("int");

                    b.HasKey("Assunto_CodAssunto", "Livro_CodLivro");

                    b.HasIndex("Livro_CodLivro");

                    b.ToTable("Livro_Assunto");
                });

            modelBuilder.Entity("Livro_Autor", b =>
                {
                    b.Property<int>("Autor_CodAutor")
                        .HasColumnType("int");

                    b.Property<int>("Livro_CodLivro")
                        .HasColumnType("int");

                    b.HasKey("Autor_CodAutor", "Livro_CodLivro");

                    b.HasIndex("Livro_CodLivro");

                    b.ToTable("Livro_Autor");
                });

            modelBuilder.Entity("Livro_Assunto", b =>
                {
                    b.HasOne("DesafioTjRjErlimar.Application.Model.Assunto", null)
                        .WithMany()
                        .HasForeignKey("Assunto_CodAssunto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioTjRjErlimar.Application.Model.Livro", null)
                        .WithMany()
                        .HasForeignKey("Livro_CodLivro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Livro_Autor", b =>
                {
                    b.HasOne("DesafioTjRjErlimar.Application.Model.Autor", null)
                        .WithMany()
                        .HasForeignKey("Autor_CodAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioTjRjErlimar.Application.Model.Livro", null)
                        .WithMany()
                        .HasForeignKey("Livro_CodLivro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
